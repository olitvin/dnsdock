sudo: required
language: c

services:
  - docker

before_install:
  - sudo apt-get update
  - sudo apt-get install -qy docker-engine
  - wget https://github.com/grammarly/rocker/releases/download/1.3.0/rocker_linux_amd64.tar.gz -O /tmp/rocker.tar.gz 
  - sudo tar -xvzf  /tmp/rocker.tar.gz -C /usr/local/bin && sudo chmod +x /usr/local/bin/rocker
  - sudo mkdir -m 777 -p /build/amd64 /build/arm
  
script:
  - if git describe --contains ${TRAVIS_COMMIT} &>/dev/null; then export VERSIONARGS="-var DOCKERIMAGE_VERSION=`git describe --contains ${TRAVIS_COMMIT}`"; else unset VERSIONARGS; fi
  - if git describe --contains ${TRAVIS_COMMIT} &>/dev/null; then export VERSION="`git describe --contains ${TRAVIS_COMMIT}`"; else unset VERSION; fi
  - rocker build --no-cache ${VERSIONARGS} -var GIT_COMMIT=${TRAVIS_COMMIT} -var OUTPUT_DIR=/build/amd64 -var ARCH=amd64 .
  - rocker build --no-cache ${VERSIONARGS} -var GIT_COMMIT=${TRAVIS_COMMIT} -var OUTPUT_DIR=/build/arm -var ARCH=arm . 

after_success:
  - sudo mv /build/amd64/dnsdock /build/dnsdock.amd64
  - sudo mv /build/arm/dnsdock /build/dnsdock.arm
  - sudo chmod -R a+rw /build
  - echo "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD" >> /tmp/deploy_containers.sh
  - echo "docker push olitvin/dnsdock:latest-amd64" >> /tmp/deploy_containers.sh
  - echo "docker push olitvin/dnsdock:latest-arm" >> /tmp/deploy_containers.sh
  - echo "docker push olitvin/dnsdock:$VERSION-amd64" >> /tmp/deploy_containers.sh
  - echo "docker push olitvin/dnsdock:$VERSION-arm" >> /tmp/deploy_containers.sh
  - sudo chmod a+rx /tmp/deploy_containers.sh
    
deploy:
  - provider: releases
    skip_cleanup: true
    api-key:
       secure: $GITHUB_TOKEN
    file: /build/dnsdock.amd64
    on:
      tags: true
  - provider: releases
    skip_cleanup: true
    api-key:
       secure: $GITHUB_TOKEN
    file: /build/dnsdock.arm
    on:
      tags: true
  - provider: script
    script: /tmp/deploy_containers.sh
    on:
      tags: true